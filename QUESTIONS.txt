

How to handle fails ? (I mean nicelely put messages and allow cuke to do AFTER for us)
Now the test fails and cleanup is not performed (RuntimeError)

  fail 'Gosh, apparently the lead status name is not the one you changed to.... 'unless on_page(LeadsPage).lead_status_on_page.include? $name_changed_to
  #The test fails now (status is changed but with no result until relog), cleaning is needed but will not be performed since test fails with RuntimeError:
  # Maybe I should put some if fails then puts  ? But we never know where test will fail, this is a special case here..

---------------------------------------------------

Below:
 visit_page(LoginPage)
 @current_page.wait_for_loading_elements
where and why it is better to use @current_page, and where I should write the page explicitly ?

???{
    I think this may depend on the step and what it is doing. @current_page can make a step definition reusable.
    If we clicked some buttons on page having the same buttons everywhere, then only page we visit changes.

    From the other side when using @current_page we should assure that we are on the page we want - so step can be used only after visiting
    the correct side. We have to assure this.
}

---------------------------------------------------

WAITING for elements and page to load:
    #Watir::Wait.until { username_element.exists? && password_element.exists? && submitlogin_element.exists } <--- no method error
    #username_element.wait_until_present < ----- Deprecated method

( I do have lots of waiting, but otherwise I was getting: unable to locate the element)


---------------------------------------------------

Cleanup - whenever test fails for some reason, cleanup is not done.
Something is happenng tith my global var flag (is zero at the end).

Should I put cleanup at the beginnng, and check the leadstatus ? If not New then change to New before test.
Isn't this being toooo careful ? In case everything goess well this would produce too much ,waste'

With such attitude we could check eeeveeeryyything before every scenario, what is more than crazy...


---------------------------------------------------


  Both work. Which one is better and WHY? (link may change (maybe), but text is visible to user, probably will be left.)
  #link(:goto_lead_statuses, :href => '#lead-status')
  link(:goto_lead_statuses, :text => 'Lead Statuses')

---------------------------------------------------

  LeadsPage - waiting for the content.  HOW ?
  When I had lots of leads, they were loaded while scrolling. What about ,,last'' leads ?
  Should I scroll down to ensure I do have all leads on the page visible ? Or maybe using filter instead ?!
  ---> sonia, maybe filter. TO DO: check how leads is loading while having lots of leads.

---------------------------------------------------


---------------------------------------------------

Shouldn't the step:
  When I Log into the Web version of Base
be included in the Background ? Almost all scenarios require logging in (until a loginpage is not checked)

---------------------------------------------------